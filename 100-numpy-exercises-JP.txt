☆100 Numpy 演習( https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md ）

これは numpy メーリング・リスト、stack overflow、numpy のドキュメントから集められた演習問題のコレクションである。このコレクションの目標は、新しいユーザと古いユーザにクイック・リファレンスを提供することだが、教える人達に一連の演習を提供することでもある。

間違いを見つけたりベターな解法を考えたら、気軽に https://github.com/rougier/numpy-100 でイシューを開いて欲しい。

１．np という名前で numpy パッケージをインポートする(★☆☆)
import numpy as np

２．numpy のバージョンと設定を表示する(★☆☆)
print(np.__version__)
np.show_config()

３．サイズが 10 の null ベクトルを作る(★☆☆)
Z = np.zeros(10)
print(Z)

４．配列のメモリ・サイズを見つける方法は？(★☆☆)
Z = np.zeros((10,10))
print("%d bytes" % (Z.size * Z.itemsize))

５．numpy の add 関数のドキュメントをコマンド・ラインから得る方法は？(★☆☆)
%run `python -c "import numpy; numpy.info(numpy.add)"`

６．サイズが 10 の null ベクトルで５番目の値が 1 のものを作る(★☆☆)
Z = np.zeros(10)
Z[4] = 1
print(Z)

７．値の範囲が 10 から 49 のベクトルを作る(★☆☆)
Z = np.arange(10,50)
print(Z)

８．ベクトルを反転させる(最初の要素が最後になる)(★☆☆)
Z = np.arange(50)
Z = Z[::-1]

９．値の範囲が 0 から 8 の 3x3 行列を作る(★☆☆)
Z = np.arange(9).reshape(3,3)
print(Z)

10．[1,2,0,0,4,0] から非ゼロの要素のインデックスを見つける(★☆☆)
nz = np.nonzero([1,2,0,0,4,0])
print(nz)

11．3x3 の単位行列を作る(★☆☆)
Z = np.eye(3)
print(Z)

12．ランダムな値で 3x3x3 の配列を作る(★☆☆)
Z = np.random.random((3,3,3))
print(Z)

13．ランダムな値で 10x10 の配列を作って、最小と最大の値を見つける(★☆☆)
Z = np.random.random((10,10))
Zmin, Zmax = Z.min(), Z.max()
print(Zmin, Zmax)

14．サイズが 30 のランダムなベクトルを作って平均値を見つける(★☆☆)
Z = np.random.random(30)
m = Z.mean()
print(m)

15．境界が 1 で内部が 0 の２次元配列を作る(★☆☆)
Z = np.ones((10,10))
Z[1:-1,1:-1] = 0

16．既存の配列に( 0 で満たされた)境界を加える方法は？(★☆☆)
Z = np.ones((5,5))
Z = np.pad(Z, pad_width=1, mode='constant', constant_values=0)
print(Z)

17. 次の式の結果は何か？(★☆☆)
print(0 * np.nan)
print(np.nan == np.nan)
print(np.inf > np.nan)
print(np.nan - np.nan)
print(0.3 == 3 * 0.1)

18. 対角線のすぐ下が 1、2、3、4 の値の 5x5 行列を作る(★☆☆)
Z = np.diag(1+np.arange(4),k=-1)
print(Z)

19．8x8 の行列を作って市松模様で満たす(★☆☆)
Z = np.zeros((8,8),dtype=int)
Z[1::2,::2] = 1
Z[::2,1::2] = 1
print(Z)

20．(6,7,8) の形状の配列を考え、100 番目の要素のインデックス (x,y,z) は何か？(※難易度未設定)
print(np.unravel_index(100,(6,7,8)))

21．tile 関数を使って市松模様の 8x8 の行列を作る(★☆☆)
Z = np.tile( np.array([[0,1],[1,0]]), (4,4))
print(Z)

22．5x5 のランダムな行列を正規化する(★☆☆)
Z = np.random.random((5,5))
Zmax, Zmin = Z.max(), Z.min()
Z = (Z - Zmin)/(Zmax - Zmin)
print(Z)

23．４つの符号なしバイト( RGBA )で色を表したカスタムな dtype を作る(★☆☆)
color = np.dtype([("r", np.ubyte, 1),
                  ("g", np.ubyte, 1),
                  ("b", np.ubyte, 1),
                  ("a", np.ubyte, 1)])

24．5x3 行列と 3x2 行列をかける(実行列の積)(★☆☆)
Z = np.dot(np.ones((5,3)), np.ones((3,2)))
print(Z)

# Alternative solution, in Python 3.5 and above
Z = np.ones((5,3)) @ np.ones((3,2))
print(Z)

25．与えられた一次元配列で、3 から 8 の場所の全ての要素を否定する(★☆☆)
# Author: Evgeni Burovski

Z = np.arange(11)
Z[(3 < Z) & (Z <= 8)] *= -1

26．次のスクリプトの出力は何か？(★☆☆)
# Author: Jake VanderPlas

print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))

27．整数ベクトル Z を考えるとき、これらの式は適切か？(★☆☆)
Z**Z
2 << Z >> 2
Z <- Z
1j*Z
Z/1/1
Z<Z>Z

28．次の式の結果は何か？(※難易度未設定)
print(np.array(0) / np.array(0))
print(np.array(0) // np.array(0))
print(np.array([np.nan]).astype(int).astype(float))

29．浮動小数点型配列をゼロから丸める方法は？(★☆☆)
# Author: Charles R Harris

Z = np.random.uniform(-10,+10,10)
print (np.copysign(np.ceil(np.abs(Z)), Z))

30. ２つの配列に共通な値を見つける方法は？(★☆☆)
Z1 = np.random.randint(0,10,10)
Z2 = np.random.randint(0,10,10)
print(np.intersect1d(Z1,Z2))

31. 全ての numpy の警告を無視する方法は？(非推奨)(★★☆)
# Suicide mode on
defaults = np.seterr(all="ignore")
Z = np.ones(1) / 0

# Back to sanity
_ = np.seterr(**defaults)

コンテキスト・マネージャーを使った同等の方法
with np.errstate(divide='ignore'):
    Z = np.ones(1) / 0

32. 次の式は真か？(★☆☆)
np.sqrt(-1) == np.emath.sqrt(-1)

33. 昨日、今日、明日の日付を得る方法は？(★★☆)
yesterday = np.datetime64('today', 'D') - np.timedelta64(1, 'D')
today     = np.datetime64('today', 'D')
tomorrow  = np.datetime64('today', 'D') + np.timedelta64(1, 'D')

34. 2016 年 7 月に対応する全ての日付を得る方法は？(★★☆)
Z = np.arange('2016-07', '2016-08', dtype='datetime64[D]')
print(Z)

35. (コピーを使わずに)その場で ((A+B)*(-A/2)) を計算する方法は？(★★☆)
A = np.ones(3)*1
B = np.ones(3)*2
C = np.ones(3)*3
np.add(A,B,out=B)
np.divide(A,2,out=A)
np.negative(A,out=A)
np.multiply(A,B,out=A)

36．５つの異なる方法を使ってランダムな配列の整数部分を抜き出す(★★☆)
Z = np.random.uniform(0,10,10)

print (Z - Z%1)
print (np.floor(Z))
print (np.ceil(Z)-1)
print (Z.astype(int))
print (np.trunc(Z))

37．行の値が 0 から 4 の範囲の 5x5 行列を作る(★★☆)
Z = np.zeros((5,5))
Z += np.arange(5)
print(Z)

38．10 個の整数を生成してそれを配列の構成に使う生成関数を考える(★☆☆)
def generate():
    for x in range(10):
        yield x
Z = np.fromiter(generate(),dtype=float,count=-1)
print(Z)

39．値の範囲が 0 から 1 で 0 と 1 を含まないサイズが 10 のベクトルを作る(★★☆)
Z = np.linspace(0,1,11,endpoint=False)[1:]
print(Z)

40．サイズが 10 のランダムなベクトルを作ってソートする(★★☆)
Z = np.random.random(10)
Z.sort()
print(Z)

41．np.sum より早く小さな配列を合計する方法は？(★★☆)
# Author: Evgeni Burovski

Z = np.arange(10)
np.add.reduce(Z)

42．２つのランダムな配列 A と B を考え、それらが等しいかどうかチェックする(★★☆)
A = np.random.randint(0,2,5)
B = np.random.randint(0,2,5)

# Assuming identical shape of the arrays and a tolerance for the comparison of values
equal = np.allclose(A,B)
print(equal)

# Checking both the shape and the element values, no tolerance (values have to be exactly equal)
equal = np.array_equal(A,B)
print(equal)

43．イミュータブルな(読み出し専用の)配列を作る(★★☆)
Z = np.zeros(10)
Z.flags.writeable = False
Z[0] = 1

44．直交座標を表すランダムな 10 x 2 の行列を考え、極座標に変換する(★★☆)
Z = np.random.random((10,2))
X,Y = Z[:,0], Z[:,1]
R = np.sqrt(X**2+Y**2)
T = np.arctan2(Y,X)
print(R)
print(T)

45．サイズが 10 のランダムなベクトルを作って、最大値を 0 に置き換える(★★☆)
Z = np.random.random(10)
Z[Z.argmax()] = 0
print(Z)

46．[0,1]x[0,1] の領域を占める xy 座標系の構造体配列を作る(★★☆)
Z = np.zeros((5,5), [('x',float),('y',float)])
Z['x'], Z['y'] = np.meshgrid(np.linspace(0,1,5),
                             np.linspace(0,1,5))
print(Z)

47．X と Y という２つの配列が与えられ、Cauchy 行列 C (Cij = 1/(xi - yj))を構成する(※難易度未設定)
# Author: Evgeni Burovski

X = np.arange(8)
Y = X + 0.5
C = 1.0 / np.subtract.outer(X, Y)
print(np.linalg.det(C))

48．それぞれの numpy のスカラ型で表せる、最大値と最小値を表示する(★★☆)
for dtype in [np.int8, np.int32, np.int64]:
   print(np.iinfo(dtype).min)
   print(np.iinfo(dtype).max)
for dtype in [np.float32, np.float64]:
   print(np.finfo(dtype).min)
   print(np.finfo(dtype).max)
   print(np.finfo(dtype).eps)

49．配列の全ての要素を表示する方法は？(★★☆)
np.set_printoptions(threshold=np.nan)
Z = np.zeros((16,16))
print(Z)

50．配列内で(与えられたスカラーに)最も近い値を見つける方法は？(★★☆)
Z = np.arange(100)
v = np.random.uniform(0,100)
index = (np.abs(Z-v)).argmin()
print(Z[index])

51．位置 (x,y) と色 (r,g,b) を表す構造化配列を作る(★★☆)
Z = np.zeros(10, [ ('position', [ ('x', float, 1),
                                  ('y', float, 1)]),
                   ('color',    [ ('r', float, 1),
                                  ('g', float, 1),
                                  ('b', float, 1)])])
print(Z)

52．座標を表す (100,2) の形のランダムなベクトルを考え、位置間の距離を見つける(★★☆)
Z = np.random.random((10,2))
X,Y = np.atleast_2d(Z[:,0], Z[:,1])
D = np.sqrt( (X-X.T)**2 + (Y-Y.T)**2)
print(D)

# Much faster with scipy
import scipy
# Thanks Gavin Heverly-Coulson (#issue 1)
import scipy.spatial

Z = np.random.random((10,2))
D = scipy.spatial.distance.cdist(Z,Z)
print(D)

53．浮動小数点 (32bit) 配列を整数 (32bit) にその場で変換する方法は？(※難易度未設定)
Z = np.arange(10, dtype=np.float32)
Z = Z.astype(np.int32, copy=False)
print(Z)

54. 次のファイルを読む方法は？(※難易度未設定)
from io import StringIO

# Fake file
s = StringIO("""1, 2, 3, 4, 5\n
                6,  ,  , 7, 8\n
                 ,  , 9,10,11\n""")
Z = np.genfromtxt(s, delimiter=",", dtype=np.int)
print(Z)

55．numpy の配列の列挙に相当するものは何か？(★★☆)
Z = np.arange(9).reshape(3,3)
for index, value in np.ndenumerate(Z):
    print(index, value)
for index in np.ndindex(Z.shape):
    print(index, Z[index])

56．配列のような包括的な 二次元ガウス分布を作る(★★☆)
X, Y = np.meshgrid(np.linspace(-1,1,10), np.linspace(-1,1,10))
D = np.sqrt(X*X+Y*Y)
sigma, mu = 1.0, 0.0
G = np.exp(-( (D-mu)**2 / ( 2.0 * sigma**2 ) ) )
print(G)

57．二次元配列にランダムに要素 p を配置する方法は？(★★☆)
# Author: Divakar

n = 10
p = 3
Z = np.zeros((n,n))
np.put(Z, np.random.choice(range(n*n), p, replace=False),1)
print(Z)

58．行列のそれぞれの行の平均を引く(★★☆)
# Author: Warren Weckesser

X = np.random.rand(5, 10)

# Recent versions of numpy
Y = X - X.mean(axis=1, keepdims=True)

# Older versions of numpy
Y = X - X.mean(axis=1).reshape(-1, 1)

print(Y)

59．配列を n 番目の列でソートする方法は？(★★☆)
# Author: Steve Tjoa

Z = np.random.randint(0,10,(3,3))
print(Z)
print(Z[Z[:,1].argsort()])

60．与えられた二次元配列に null の列があるかどうか調べる方法は？(★★☆)
# Author: Warren Weckesser

Z = np.random.randint(0,3,(3,10))
print((~Z.any(axis=0)).any())

61．配列の与えられた値から最も近い値を見つける(★★☆)
Z = np.random.uniform(0,1,10)
z = 0.5
m = Z.flat[np.abs(Z - z).argmin()]
print(m)

62. (1,3) と (3,1) の形状の２つの配列を考え、イテレータを使ってそれらの合計を計算する方法は？(★★☆)
A = np.arange(3).reshape(3,1)
B = np.arange(3).reshape(1,3)
it = np.nditer([A,B,None])
for x,y,z in it: z[...] = x + y
print(it.operands[2])

63．name 属性のある配列クラスを作る(★★☆)。
class NamedArray(np.ndarray):
    def __new__(cls, array, name="no name"):
        obj = np.asarray(array).view(cls)
        obj.name = name
        return obj
    def __array_finalize__(self, obj):
        if obj is None: return
        self.info = getattr(obj, 'name', "no name")

Z = NamedArray(np.arange(10), "range_10")
print (Z.name)

64．与えられたベクトルを考え、２番目のベクトルに指されたそれぞれの要素に 1 加える方法は(繰り返しインデックスに注意)？(★★★)
# Author: Brett Olsen

Z = np.ones(10)
I = np.random.randint(0,len(Z),20)
Z += np.bincount(I, minlength=len(Z))
print(Z)

# Another solution
# Author: Bartosz Telenczuk
np.add.at(Z, I, 1)
print(Z)

65．インデックス・リスト(I)に基づいて配列(F)にベクトル(X)の要素を累積する方法は？(★★★)
# Author: Alan G Isaac

X = [1,2,3,4,5,6]
I = [1,3,9,3,4,1]
F = np.bincount(I,X)
print(F)

66．(dtype=ubyte) の (w,h,3) 画像を考え、固有な色の数を計算する(★★★)。
# Author: Nadav Horesh

w,h = 16,16
I = np.random.randint(0,2,(h,w,3)).astype(np.ubyte)
F = I[...,0]*256*256 + I[...,1]*256 +I[...,2]
n = len(np.unique(F))
print(np.unique(I))

67．４次元配列を考え、一度に最後の２軸の合計を得る方法は？(★★★)
A = np.random.randint(0,10,(3,4,3,4))
# solution by passing a tuple of axes (introduced in numpy 1.7.0)
sum = A.sum(axis=(-2,-1))
print(sum)
# solution by flattening the last two dimensions into one
# (useful for functions that don't accept tuples for axis argument)
sum = A.reshape(A.shape[:-2] + (-1,)).sum(axis=-1)
print(sum)

68．一次元のベクトル D を考え、サブセット・インデックスを表す同じサイズのベクトル S を使って、D のサブセットの平均を計算する方法は？(★★★)
# Author: Jaime Fernández del Río

D = np.random.uniform(0,1,100)
S = np.random.randint(0,10,100)
D_sums = np.bincount(S, weights=D)
D_counts = np.bincount(S)
D_means = D_sums / D_counts
print(D_means)

# Pandas solution as a reference due to more intuitive code
import pandas as pd
print(pd.Series(D).groupby(S).mean())

69．内積の対角成分を得る方法は？(★★★)
# Author: Mathieu Blondel

A = np.random.uniform(0,1,(5,5))
B = np.random.uniform(0,1,(5,5))

# Slow version  
np.diag(np.dot(A, B))

# Fast version
np.sum(A * B.T, axis=1)

# Faster version
np.einsum("ij,ji->i", A, B)

70．ベクトル [1, 2, 3, 4, 5] を考え、それぞれの値の間に３つの連続するゼロが挿入された新しいベクトルを構築する方法は？(★★★)
# Author: Warren Weckesser

Z = np.array([1,2,3,4,5])
nz = 3
Z0 = np.zeros(len(Z) + (len(Z)-1)*(nz))
Z0[::nz+1] = Z
print(Z0)

71．(5,5,3) 次元の配列を考え、(5,5) 次元の配列と乗算する方法は？(★★★)
A = np.ones((5,5,3))
B = 2*np.ones((5,5))
print(A * B[:,:,None])

72．配列の２つの行を入れ替える方法は？(★★★)
# Author: Eelco Hoogendoorn

A = np.arange(25).reshape(5,5)
A[[0,1]] = A[[1,0]]
print(A)
